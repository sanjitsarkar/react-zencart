{"ast":null,"code":"// import axios from \"axios\";\n// import {\n//   createContext,\n//   useContext,\n//   useEffect,\n//   useReducer,\n//   useState,\n// } from \"react\";\n// import { initialState, reducer } from \"../../reducers/reducer\";\n// const CategoryContext = createContext();\n// const CategoryProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const [categories, setCategories] = useState([]);\n//   useEffect(() => {\n//     axios\n//       .get(\"/api/categories\")\n//       .then((res) => {\n//         dispatch({ action: \"SUCCESS\", payload: res.data });\n//         setCategories(res.data);\n//       })\n//       .catch((err) => {\n//         dispatch({ action: \"FAILURE\", payload: err.message });\n//         console.log(err);\n//       });\n//   }, [state, categories, dispatch]);\n//   return (\n//     <CategoryContext.Provider value={{ state, dispatch }}>\n//       {children}\n//     </CategoryContext.Provider>\n//   );\n// };\n// const useCategory = () => useContext(CategoryContext);\n// export { CategoryProvider, useCategory };","map":{"version":3,"sources":["/home/xanjit/Desktop/neog/react/react-zencart/src/context/Category/CategoryContext.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import axios from \"axios\";\n// import {\n//   createContext,\n//   useContext,\n//   useEffect,\n//   useReducer,\n//   useState,\n// } from \"react\";\n// import { initialState, reducer } from \"../../reducers/reducer\";\n\n// const CategoryContext = createContext();\n\n// const CategoryProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const [categories, setCategories] = useState([]);\n//   useEffect(() => {\n//     axios\n//       .get(\"/api/categories\")\n//       .then((res) => {\n//         dispatch({ action: \"SUCCESS\", payload: res.data });\n//         setCategories(res.data);\n//       })\n//       .catch((err) => {\n//         dispatch({ action: \"FAILURE\", payload: err.message });\n//         console.log(err);\n//       });\n//   }, [state, categories, dispatch]);\n//   return (\n//     <CategoryContext.Provider value={{ state, dispatch }}>\n//       {children}\n//     </CategoryContext.Provider>\n//   );\n// };\n\n// const useCategory = () => useContext(CategoryContext);\n\n// export { CategoryProvider, useCategory };\n"]},"metadata":{},"sourceType":"module"}