{"ast":null,"code":"var _jsxFileName = \"/home/xanjit/Desktop/neog/react/react-zencart/src/context/AuthContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState, createContext, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  loading: true,\n  data: [],\n  error: \"\"\n};\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(initialState);\n  const [loginCred, setLoginCred] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [signupCred, setSignupCred] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  });\n\n  const signUp = e => {\n    e.preventDefault();\n    console.log(\"signupCred\", signupCred);\n\n    if (signupCred.password !== signupCred.confirmPassword) {\n      return;\n    }\n\n    axios.post(\"/api/auth/signup\", JSON.stringify({\n      firstName: signupCred.firstName,\n      lastName: signupCred.lastName,\n      email: signupCred.email,\n      password: signupCred.password\n    })).then(res => {\n      setIsLoggedIn(true);\n      setUser({\n        loading: false,\n        data: res.data,\n        error: \"\"\n      });\n    }).catch(err => {\n      console.log(err);\n      setUser({\n        loading: false,\n        data: [],\n        error: err.message\n      });\n    });\n  };\n\n  const logIn = e => {\n    e.preventDefault();\n    console.log(\"loginCred\", loginCred);\n    axios.post(\"/api/auth/login\", JSON.stringify({\n      email: loginCred.email,\n      password: loginCred.password\n    })).then(res => {\n      setIsLoggedIn(true);\n      setUser({\n        loading: false,\n        data: res.data,\n        error: \"\"\n      });\n    }).catch(err => {\n      console.log(err);\n      setUser({\n        loading: false,\n        data: [],\n        error: err.message\n      });\n    });\n  };\n\n  const logOut = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setIsLoggedIn(false);\n    setUser(initialState);\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      localStorage.setItem(\"token\", user.data.encodedToken);\n      localStorage.setItem(\"user\", user);\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  }, [isLoggedIn]);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setIsLoggedIn(true);\n      setUser(localStorage.getItem(\"user\"));\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isLoggedIn,\n      signUp,\n      logIn,\n      logOut,\n      loginCred,\n      setLoginCred,\n      signupCred,\n      setSignupCred\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"AJfAW90OfM0mK2GrLzcSmB5BuwQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { useAuth, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/xanjit/Desktop/neog/react/react-zencart/src/context/AuthContext.jsx"],"names":["axios","React","useEffect","useState","createContext","useContext","useNavigate","AuthContext","initialState","loading","data","error","AuthProvider","children","navigate","isLoggedIn","setIsLoggedIn","user","setUser","loginCred","setLoginCred","email","password","signupCred","setSignupCred","confirmPassword","firstName","lastName","signUp","e","preventDefault","console","log","post","JSON","stringify","then","res","catch","err","message","logIn","logOut","localStorage","removeItem","setItem","encodedToken","replace","getItem","useAuth"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState, createContext, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext();\nconst initialState = {\n  loading: true,\n  data: [],\n  error: \"\",\n};\nconst AuthProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(initialState);\n  const [loginCred, setLoginCred] = useState({ email: \"\", password: \"\" });\n  const [signupCred, setSignupCred] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  });\n\n  const signUp = (e) => {\n    e.preventDefault();\n    console.log(\"signupCred\", signupCred);\n    if (signupCred.password !== signupCred.confirmPassword) {\n      return;\n    }\n    axios\n      .post(\n        \"/api/auth/signup\",\n        JSON.stringify({\n          firstName: signupCred.firstName,\n          lastName: signupCred.lastName,\n          email: signupCred.email,\n          password: signupCred.password,\n        })\n      )\n      .then((res) => {\n        setIsLoggedIn(true);\n        setUser({ loading: false, data: res.data, error: \"\" });\n      })\n      .catch((err) => {\n        console.log(err);\n        setUser({ loading: false, data: [], error: err.message });\n      });\n  };\n  const logIn = (e) => {\n    e.preventDefault();\n    console.log(\"loginCred\", loginCred);\n\n    axios\n      .post(\n        \"/api/auth/login\",\n        JSON.stringify({\n          email: loginCred.email,\n          password: loginCred.password,\n        })\n      )\n      .then((res) => {\n        setIsLoggedIn(true);\n        setUser({ loading: false, data: res.data, error: \"\" });\n      })\n      .catch((err) => {\n        console.log(err);\n        setUser({ loading: false, data: [], error: err.message });\n      });\n  };\n  const logOut = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setIsLoggedIn(false);\n    setUser(initialState);\n  };\n  useEffect(() => {\n    if (isLoggedIn) {\n      localStorage.setItem(\"token\", user.data.encodedToken);\n      localStorage.setItem(\"user\", user);\n      navigate(\"/\", { replace: true });\n    }\n  }, [isLoggedIn]);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setIsLoggedIn(true);\n      setUser(localStorage.getItem(\"user\"));\n      navigate(\"/\", { replace: true });\n    }\n  }, []);\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isLoggedIn,\n        signUp,\n        logIn,\n        logOut,\n        loginCred,\n        setLoginCred,\n        signupCred,\n        setSignupCred,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuth = () => useContext(AuthContext);\nexport { useAuth, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}