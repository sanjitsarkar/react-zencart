{"ast":null,"code":"var _jsxFileName = \"/home/xanjit/Desktop/neog/react/react-zencart/src/context/CartContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\nconst CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n\n  const addToCart = product => {\n    setCart(_cart => {\n      if (!_cart.find(item => item._id === product._id)) {\n        _cart.map(item => item._id === product._id && { ...item,\n          quantity: item.quantity + 1\n        });\n      } else {\n        return { ...product,\n          quantity: 1\n        };\n      }\n    });\n  };\n\n  const decrementQuantity = id => {\n    setCart(_cart => _cart.map(item => {\n      item._id === id && { ...item,\n        quantity: item.quantity - 1\n      };\n    }));\n  };\n\n  const removeFromCart = id => {\n    setCart(_cart => _cart.filter(item => item._id !== id));\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  useEffect(() => {\n    setCart(() => localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : []);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      setCart,\n      addToCart,\n      decrementQuantity,\n      removeFromCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n\n_c = CartProvider;\n\nconst useCart = () => {\n  _s2();\n\n  return useContext(CartContext);\n};\n\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { useCart, CartProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/xanjit/Desktop/neog/react/react-zencart/src/context/CartContext.jsx"],"names":["React","useState","createContext","useContext","useEffect","CartContext","CartProvider","children","cart","setCart","addToCart","product","_cart","find","item","_id","map","quantity","decrementQuantity","id","removeFromCart","filter","clearCart","localStorage","getItem","JSON","parse","setItem","stringify","useCart"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;;AACA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AACA,MAAMI,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMS,SAAS,GAAIC,OAAD,IAAa;AAC7BF,IAAAA,OAAO,CAAEG,KAAD,IAAW;AACjB,UAAI,CAACA,KAAK,CAACC,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA1C,CAAL,EAAqD;AACnDH,QAAAA,KAAK,CAACI,GAAN,CACGF,IAAD,IACEA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAArB,IAA4B,EAAE,GAAGD,IAAL;AAAWG,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,SAFhC;AAID,OALD,MAKO;AACL,eAAO,EAAE,GAAGN,OAAL;AAAcM,UAAAA,QAAQ,EAAE;AAAxB,SAAP;AACD;AACF,KATM,CAAP;AAUD,GAXD;;AAYA,QAAMC,iBAAiB,GAAIC,EAAD,IAAQ;AAChCV,IAAAA,OAAO,CAAEG,KAAD,IACNA,KAAK,CAACI,GAAN,CAAWF,IAAD,IAAU;AAClBA,MAAAA,IAAI,CAACC,GAAL,KAAaI,EAAb,IAAmB,EAAE,GAAGL,IAAL;AAAWG,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,OAAnB;AACD,KAFD,CADK,CAAP;AAKD,GAND;;AAOA,QAAMG,cAAc,GAAID,EAAD,IAAQ;AAC7BV,IAAAA,OAAO,CAAEG,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaI,EAApC,CAAZ,CAAP;AACD,GAFD;;AAGA,QAAMG,SAAS,GAAG,MAAM;AACtBb,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAAC,MACNc,YAAY,CAACC,OAAb,CAAqB,MAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADJ,GAEI,EAHC,CAAP;AAKD,GANQ,EAMN,EANM,CAAT;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAepB,IAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,IADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA,SAHK;AAILQ,MAAAA,iBAJK;AAKLE,MAAAA,cALK;AAMLE,MAAAA;AANK,KADT;AAAA,cAUGf;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnDD;;GAAMD,Y;;KAAAA,Y;;AAoDN,MAAMuB,OAAO,GAAG;AAAA;;AAAA,SAAM1B,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAhB;;IAAMwB,O;;AACN,SAASA,OAAT,EAAkBvB,YAAlB","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\nconst CartContext = createContext();\nconst CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const addToCart = (product) => {\n    setCart((_cart) => {\n      if (!_cart.find((item) => item._id === product._id)) {\n        _cart.map(\n          (item) =>\n            item._id === product._id && { ...item, quantity: item.quantity + 1 }\n        );\n      } else {\n        return { ...product, quantity: 1 };\n      }\n    });\n  };\n  const decrementQuantity = (id) => {\n    setCart((_cart) =>\n      _cart.map((item) => {\n        item._id === id && { ...item, quantity: item.quantity - 1 };\n      })\n    );\n  };\n  const removeFromCart = (id) => {\n    setCart((_cart) => _cart.filter((item) => item._id !== id));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  useEffect(() => {\n    setCart(() =>\n      localStorage.getItem(\"cart\")\n        ? JSON.parse(localStorage.getItem(\"cart\"))\n        : []\n    );\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        setCart,\n        addToCart,\n        decrementQuantity,\n        removeFromCart,\n        clearCart,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\nconst useCart = () => useContext(CartContext);\nexport { useCart, CartProvider };\n"]},"metadata":{},"sourceType":"module"}