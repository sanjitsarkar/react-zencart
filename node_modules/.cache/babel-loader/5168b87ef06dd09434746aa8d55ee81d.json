{"ast":null,"code":"var _jsxFileName = \"/home/xanjit/Desktop/neog/react/react-zencart/src/context/CartContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\nconst CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n\n  const addToCart = product => {\n    if (cart.find(item => item._id === product._id)) {\n      setCart(() => cart.map(item => {\n        return { ...item,\n          quantity: item.quantity + 1\n        };\n      }));\n    } else {\n      setCart(_cart => [..._cart, { ...product,\n        quantity: 1\n      }]);\n    }\n  };\n\n  const decrementQuantity = product => {\n    setCart(() => cart.map(item => {\n      return { ...item,\n        quantity: item.quantity - 1\n      };\n    }));\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  useEffect(() => {\n    setCart(() => localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : []);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      setCart,\n      addToCart,\n      removeFromCart: decrementQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n\n_c = CartProvider;\n\nconst useCart = () => {\n  _s2();\n\n  return useContext(CartContext);\n};\n\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { useCart, CartProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/xanjit/Desktop/neog/react/react-zencart/src/context/CartContext.jsx"],"names":["React","useState","createContext","useContext","useEffect","CartContext","CartProvider","children","cart","setCart","addToCart","product","find","item","_id","map","quantity","_cart","decrementQuantity","clearCart","localStorage","getItem","JSON","parse","setItem","stringify","removeFromCart","useCart"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;;AACA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AACA,MAAMI,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMS,SAAS,GAAIC,OAAD,IAAa;AAC7B,QAAIH,IAAI,CAACI,IAAL,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaH,OAAO,CAACG,GAAzC,CAAJ,EAAmD;AACjDL,MAAAA,OAAO,CAAC,MACND,IAAI,CAACO,GAAL,CAAUF,IAAD,IAAU;AACjB,eAAO,EAAE,GAAGA,IAAL;AAAWG,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,SAAP;AACD,OAFD,CADK,CAAP;AAKD,KAND,MAMO;AACLP,MAAAA,OAAO,CAAEQ,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAW,EAAE,GAAGN,OAAL;AAAcK,QAAAA,QAAQ,EAAE;AAAxB,OAAX,CAAZ,CAAP;AACD;AACF,GAVD;;AAWA,QAAME,iBAAiB,GAAIP,OAAD,IAAa;AACrCF,IAAAA,OAAO,CAAC,MACND,IAAI,CAACO,GAAL,CAAUF,IAAD,IAAU;AACjB,aAAO,EAAE,GAAGA,IAAL;AAAWG,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,OAAP;AACD,KAFD,CADK,CAAP;AAKD,GAND;;AAOA,QAAMG,SAAS,GAAG,MAAM;AACtBV,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAAC,MACNW,YAAY,CAACC,OAAb,CAAqB,MAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADJ,GAEI,EAHC,CAAP;AAKD,GANQ,EAMN,EANM,CAAT;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAejB,IAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,IADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA,SAHK;AAILgB,MAAAA,cAAc,EAAER,iBAJX;AAKLC,MAAAA;AALK,KADT;AAAA,cASGZ;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9CD;;GAAMD,Y;;KAAAA,Y;;AA+CN,MAAMqB,OAAO,GAAG;AAAA;;AAAA,SAAMxB,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAhB;;IAAMsB,O;;AACN,SAASA,OAAT,EAAkBrB,YAAlB","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\nconst CartContext = createContext();\nconst CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const addToCart = (product) => {\n    if (cart.find((item) => item._id === product._id)) {\n      setCart(() =>\n        cart.map((item) => {\n          return { ...item, quantity: item.quantity + 1 };\n        })\n      );\n    } else {\n      setCart((_cart) => [..._cart, { ...product, quantity: 1 }]);\n    }\n  };\n  const decrementQuantity = (product) => {\n    setCart(() =>\n      cart.map((item) => {\n        return { ...item, quantity: item.quantity - 1 };\n      })\n    );\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  useEffect(() => {\n    setCart(() =>\n      localStorage.getItem(\"cart\")\n        ? JSON.parse(localStorage.getItem(\"cart\"))\n        : []\n    );\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        setCart,\n        addToCart,\n        removeFromCart: decrementQuantity,\n        clearCart,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\nconst useCart = () => useContext(CartContext);\nexport { useCart, CartProvider };\n"]},"metadata":{},"sourceType":"module"}