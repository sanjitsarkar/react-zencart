{"ast":null,"code":"import { Response } from \"miragejs\";\n/**\n * All the routes related to Product are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/products\n * */\n\nexport const getAllProductsHandler = function () {\n  return new Response(200, {}, {\n    products: this.db.products\n  });\n};\n/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/user/products/:productId\n * */\n\nexport const getProductHandler = function (schema, request) {\n  const productId = request.params.productId;\n\n  try {\n    const product = schema.products.findBy({\n      _id: productId\n    });\n    return new Response(200, {}, {\n      product\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};","map":{"version":3,"sources":["/home/xanjit/Desktop/neog/react-ecom/src/backend/controllers/ProductController.js"],"names":["Response","getAllProductsHandler","products","db","getProductHandler","schema","request","productId","params","product","findBy","_id","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,UAAzB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,YAAY;AAC/C,SAAO,IAAID,QAAJ,CAAa,GAAb,EAAkB,EAAlB,EAAsB;AAAEE,IAAAA,QAAQ,EAAE,KAAKC,EAAL,CAAQD;AAApB,GAAtB,CAAP;AACD,CAFM;AAIP;AACA;AACA;AACA;;AAEA,OAAO,MAAME,iBAAiB,GAAG,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AAC1D,QAAMC,SAAS,GAAGD,OAAO,CAACE,MAAR,CAAeD,SAAjC;;AACA,MAAI;AACF,UAAME,OAAO,GAAGJ,MAAM,CAACH,QAAP,CAAgBQ,MAAhB,CAAuB;AAAEC,MAAAA,GAAG,EAAEJ;AAAP,KAAvB,CAAhB;AACA,WAAO,IAAIP,QAAJ,CAAa,GAAb,EAAkB,EAAlB,EAAsB;AAAES,MAAAA;AAAF,KAAtB,CAAP;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,WAAO,IAAIZ,QAAJ,CACL,GADK,EAEL,EAFK,EAGL;AACEY,MAAAA;AADF,KAHK,CAAP;AAOD;AACF,CAdM","sourcesContent":["import { Response } from \"miragejs\";\n\n/**\n * All the routes related to Product are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/products\n * */\n\nexport const getAllProductsHandler = function () {\n  return new Response(200, {}, { products: this.db.products });\n};\n\n/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/user/products/:productId\n * */\n\nexport const getProductHandler = function (schema, request) {\n  const productId = request.params.productId;\n  try {\n    const product = schema.products.findBy({ _id: productId });\n    return new Response(200, {}, { product });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}