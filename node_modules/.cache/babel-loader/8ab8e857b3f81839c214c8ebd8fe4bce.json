{"ast":null,"code":"var _jsxFileName = \"/home/xanjit/Desktop/neog/react-ecom/src/components/products-page/product-page-components/product-page-body.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useProductsData } from '../../../context/data/data-context';\nimport { SingleProductCard } from './single-product-card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductsPageBody = () => {\n  _s();\n\n  // Getting data from context\n  const {\n    products\n  } = useProductsData();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"product-main\",\n    children: products.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING AWESOMENESS.........\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this) : products.data.map(product => {\n      const {\n        _id,\n        image,\n        image2,\n        name,\n        price,\n        offerPrice,\n        offerMessage,\n        inStock,\n        hasOffer\n      } = product;\n      return _id == null ?\n      /*#__PURE__*/\n      // if products are empty then this div will show\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-grey\",\n          children: offerMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 8\n        }, this)]\n      }, '1', true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this) :\n      /*#__PURE__*/\n      //! Final products is show here\n      _jsxDEV(SingleProductCard, {\n        id: _id,\n        image: image,\n        image2: image2,\n        name: name,\n        price: price,\n        offer: offerMessage,\n        offerPrice: offerPrice,\n        hasOffer: hasOffer,\n        inStock: inStock,\n        onClick: () => {\n          // console.log is for testing purposes for future implementation of\n          console.log('This product is : ', _id);\n        }\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProductsPageBody, \"/CJeI46epM+VGWkEfzzD6RInhEY=\", false, function () {\n  return [useProductsData];\n});\n\n_c = ProductsPageBody;\nexport { ProductsPageBody };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsPageBody\");","map":{"version":3,"sources":["/home/xanjit/Desktop/neog/react-ecom/src/components/products-page/product-page-components/product-page-body.jsx"],"names":["axios","React","useEffect","useState","useProductsData","SingleProductCard","ProductsPageBody","products","loading","data","map","product","_id","image","image2","name","price","offerPrice","offerMessage","inStock","hasOffer","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeH,eAAe,EAApC;AACA,sBACC;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cAEEG,QAAQ,CAACC,OAAT,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,GAGAD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,OAAD,IAAa;AAC9B,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA,KAAP;AAAcC,QAAAA,MAAd;AAAsBC,QAAAA,IAAtB;AAA4BC,QAAAA,KAA5B;AAAmCC,QAAAA,UAAnC;AAA+CC,QAAAA,YAA/C;AAA6DC,QAAAA,OAA7D;AAAsEC,QAAAA;AAAtE,UAAmFT,OAAzF;AACA,aAAOC,GAAG,IAAI,IAAP;AAAA;AACN;AACA;AAAA,gCACC;AAAA,oBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BG;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA,SAAU,GAAV;AAAA;AAAA;AAAA;AAAA,cAFM;AAAA;AAON;AACA,cAAC,iBAAD;AAEC,QAAA,EAAE,EAAEN,GAFL;AAGC,QAAA,KAAK,EAAEC,KAHR;AAIC,QAAA,MAAM,EAAEC,MAJT;AAKC,QAAA,IAAI,EAAEC,IALP;AAMC,QAAA,KAAK,EAAEC,KANR;AAOC,QAAA,KAAK,EAAEE,YAPR;AAQC,QAAA,UAAU,EAAED,UARb;AASC,QAAA,QAAQ,EAAEG,QATX;AAUC,QAAA,OAAO,EAAED,OAVV;AAWC,QAAA,OAAO,EAAE,MAAM;AACd;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCV,GAAlC;AACA;AAdF,SACMA,GADN;AAAA;AAAA;AAAA;AAAA,cARD;AAyBA,KA3BD;AALF;AAAA;AAAA;AAAA;AAAA,UADD;AAqCA,CAxCD;;GAAMN,gB;UAEgBF,e;;;KAFhBE,gB;AA0CN,SAASA,gBAAT","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useProductsData } from '../../../context/data/data-context';\nimport { SingleProductCard } from './single-product-card';\n\nconst ProductsPageBody = () => {\n\t// Getting data from context\n\tconst { products } = useProductsData();\n\treturn (\n\t\t<main className='product-main'>\n\t\t\t{/* product loading logic */}\n\t\t\t{products.loading ? (\n\t\t\t\t<div>LOADING AWESOMENESS.........</div>\n\t\t\t) : (\n\t\t\t\tproducts.data.map((product) => {\n\t\t\t\t\tconst { _id, image, image2, name, price, offerPrice, offerMessage, inStock, hasOffer } = product;\n\t\t\t\t\treturn _id == null ? (\n\t\t\t\t\t\t// if products are empty then this div will show\n\t\t\t\t\t\t<div key={'1'}>\n\t\t\t\t\t\t\t<p>{name}</p>\n\t\t\t\t\t\t\t<p className='text-grey'>{offerMessage}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t//! Final products is show here\n\t\t\t\t\t\t<SingleProductCard\n\t\t\t\t\t\t\tkey={_id}\n\t\t\t\t\t\t\tid={_id}\n\t\t\t\t\t\t\timage={image}\n\t\t\t\t\t\t\timage2={image2}\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\tprice={price}\n\t\t\t\t\t\t\toffer={offerMessage}\n\t\t\t\t\t\t\tofferPrice={offerPrice}\n\t\t\t\t\t\t\thasOffer={hasOffer}\n\t\t\t\t\t\t\tinStock={inStock}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t// console.log is for testing purposes for future implementation of\n\t\t\t\t\t\t\t\tconsole.log('This product is : ', _id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t)}\n\t\t</main>\n\t);\n};\n\nexport { ProductsPageBody };\n"]},"metadata":{},"sourceType":"module"}