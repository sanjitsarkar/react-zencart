{"ast":null,"code":"var _jsxFileName = \"/home/xanjit/Desktop/neog/react/react-zencart/src/context/mycart/mycart-context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCartContext = /*#__PURE__*/createContext();\n\nconst MyCartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [myCart, setMyCart] = useState([]);\n\n  const addToCart = product => {\n    setMyCart(prevList => {\n      const index = prevList.findIndex(p => p.id === product.id);\n      return index === -1 ? [...prevList, { ...product,\n        quantity: 1\n      }] : prevList;\n    });\n  };\n\n  const changeCartQuantity = (product, quantityNumber) => {\n    setMyCart(prevList => prevList.map(p => {\n      return p.id === product.id ? { ...product,\n        quantity: p.quantity + quantityNumber\n      } : p;\n    }));\n  };\n\n  const removeFromCart = product => {\n    setMyCart(prevList => prevList.filter(prev => prev.id !== product.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MyCartContext.Provider, {\n    value: {\n      myCart,\n      addToCart,\n      removeFromCart,\n      changeCartQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyCartProvider, \"mqeT2Kx5H8hsQImJ4LyvCZjSEBY=\");\n\n_c = MyCartProvider;\n\nconst useMyCart = () => {\n  _s2();\n\n  return useContext(MyCartContext);\n};\n\n_s2(useMyCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { MyCartProvider, useMyCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCartProvider\");","map":{"version":3,"sources":["/home/xanjit/Desktop/neog/react/react-zencart/src/context/mycart/mycart-context.jsx"],"names":["createContext","useContext","useState","MyCartContext","MyCartProvider","children","myCart","setMyCart","addToCart","product","prevList","index","findIndex","p","id","quantity","changeCartQuantity","quantityNumber","map","removeFromCart","filter","prev","useMyCart"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;;AAEA,MAAMI,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMM,SAAS,GAAIC,OAAD,IAAa;AAC9BF,IAAAA,SAAS,CAAEG,QAAD,IAAc;AACvB,YAAMC,KAAK,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,OAAO,CAACK,EAA3C,CAAd;AACA,aAAOH,KAAK,KAAK,CAAC,CAAX,GAAe,CAAC,GAAGD,QAAJ,EAAc,EAAE,GAAGD,OAAL;AAAcM,QAAAA,QAAQ,EAAE;AAAxB,OAAd,CAAf,GAA4DL,QAAnE;AACA,KAHQ,CAAT;AAIA,GALD;;AAOA,QAAMM,kBAAkB,GAAG,CAACP,OAAD,EAAUQ,cAAV,KAA6B;AACvDV,IAAAA,SAAS,CAAEG,QAAD,IACTA,QAAQ,CAACQ,GAAT,CAAcL,CAAD,IAAO;AACnB,aAAOA,CAAC,CAACC,EAAF,KAASL,OAAO,CAACK,EAAjB,GAAsB,EAAE,GAAGL,OAAL;AAAcM,QAAAA,QAAQ,EAAEF,CAAC,CAACE,QAAF,GAAaE;AAArC,OAAtB,GAA8EJ,CAArF;AACA,KAFD,CADQ,CAAT;AAKA,GAND;;AAQA,QAAMM,cAAc,GAAIV,OAAD,IAAa;AACnCF,IAAAA,SAAS,CAAEG,QAAD,IAAcA,QAAQ,CAACU,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYL,OAAO,CAACK,EAA9C,CAAf,CAAT;AACA,GAFD;;AAIA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAER,MAAAA,MAAF;AAAUE,MAAAA,SAAV;AAAqBW,MAAAA,cAArB;AAAqCH,MAAAA;AAArC,KAA/B;AAAA,cAA2FX;AAA3F;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAvBD;;GAAMD,c;;KAAAA,c;;AAyBN,MAAMkB,SAAS,GAAG;AAAA;;AAAA,SAAMrB,UAAU,CAACE,aAAD,CAAhB;AAAA,CAAlB;;IAAMmB,S;;AAEN,SAASlB,cAAT,EAAyBkB,SAAzB","sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nconst MyCartContext = createContext();\n\nconst MyCartProvider = ({ children }) => {\n\tconst [myCart, setMyCart] = useState([]);\n\n\tconst addToCart = (product) => {\n\t\tsetMyCart((prevList) => {\n\t\t\tconst index = prevList.findIndex((p) => p.id === product.id);\n\t\t\treturn index === -1 ? [...prevList, { ...product, quantity: 1 }] : prevList;\n\t\t});\n\t};\n\n\tconst changeCartQuantity = (product, quantityNumber) => {\n\t\tsetMyCart((prevList) =>\n\t\t\tprevList.map((p) => {\n\t\t\t\treturn p.id === product.id ? { ...product, quantity: p.quantity + quantityNumber } : p;\n\t\t\t}),\n\t\t);\n\t};\n\n\tconst removeFromCart = (product) => {\n\t\tsetMyCart((prevList) => prevList.filter((prev) => prev.id !== product.id));\n\t};\n\n\treturn <MyCartContext.Provider value={{ myCart, addToCart, removeFromCart, changeCartQuantity }}>{children}</MyCartContext.Provider>;\n};\n\nconst useMyCart = () => useContext(MyCartContext);\n\nexport { MyCartProvider, useMyCart };\n"]},"metadata":{},"sourceType":"module"}