{"ast":null,"code":"var _jsxFileName = \"/home/xanjit/Desktop/neog/react/react-zencart/src/context/theme/theme-context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\nconst ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme(currentTheme => currentTheme === 'light' ? 'dark' : 'light');\n\n    if (theme === 'light') {\n      document.documentElement.setAttribute('data-theme', 'dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.setAttribute('data-theme', 'light');\n      localStorage.setItem('theme', 'light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = localStorage.getItem('theme');\n\n    if (localTheme) {\n      document.documentElement.setAttribute('data-theme', localTheme);\n      setTheme(localTheme);\n    } else {\n      localStorage.setItem('theme', 'light');\n      document.documentElement.setAttribute('data-theme', 'light');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      toggleTheme,\n      theme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeProvider, \"Z8UCD9KudyQA62DCQ9e5cf9+m5k=\");\n\n_c = ThemeProvider;\n\nconst useTheme = () => {\n  _s2();\n\n  return useContext(ThemeContext);\n};\n\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { ThemeProvider, useTheme };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/xanjit/Desktop/neog/react/react-zencart/src/context/theme/theme-context.jsx"],"names":["createContext","useContext","useState","useEffect","ThemeContext","ThemeProvider","children","theme","setTheme","toggleTheme","currentTheme","document","documentElement","setAttribute","localStorage","setItem","localTheme","getItem","useTheme"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,SAA9C,QAA+D,OAA/D;;AAEA,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAEA,MAAMK,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMO,WAAW,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAAEE,YAAD,IAAmBA,YAAY,KAAK,OAAjB,GAA2B,MAA3B,GAAoC,OAAxD,CAAR;;AACA,QAAIH,KAAK,KAAK,OAAd,EAAuB;AACtBI,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACA,KAHD,MAGO;AACNJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACA;AACD,GATD;;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,UAAU,GAAGF,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAnB;;AACA,QAAID,UAAJ,EAAgB;AACfL,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoDG,UAApD;AACAR,MAAAA,QAAQ,CAACQ,UAAD,CAAR;AACA,KAHD,MAGO;AACNF,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACA;AACD,GATQ,EASN,EATM,CAAT;AAWA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,WAAF;AAAeF,MAAAA;AAAf,KAA9B;AAAA,cAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAxBD;;GAAMD,a;;KAAAA,a;;AA0BN,MAAMa,QAAQ,GAAG;AAAA;;AAAA,SAAMjB,UAAU,CAACG,YAAD,CAAhB;AAAA,CAAjB;;IAAMc,Q;;AAEN,SAASb,aAAT,EAAwBa,QAAxB","sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n\tconst [theme, setTheme] = useState('light');\n\tconst toggleTheme = () => {\n\t\tsetTheme((currentTheme) => (currentTheme === 'light' ? 'dark' : 'light'));\n\t\tif (theme === 'light') {\n\t\t\tdocument.documentElement.setAttribute('data-theme', 'dark');\n\t\t\tlocalStorage.setItem('theme', 'dark');\n\t\t} else {\n\t\t\tdocument.documentElement.setAttribute('data-theme', 'light');\n\t\t\tlocalStorage.setItem('theme', 'light');\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tconst localTheme = localStorage.getItem('theme');\n\t\tif (localTheme) {\n\t\t\tdocument.documentElement.setAttribute('data-theme', localTheme);\n\t\t\tsetTheme(localTheme);\n\t\t} else {\n\t\t\tlocalStorage.setItem('theme', 'light');\n\t\t\tdocument.documentElement.setAttribute('data-theme', 'light');\n\t\t}\n\t}, []);\n\n\treturn <ThemeContext.Provider value={{ toggleTheme, theme }}>{children}</ThemeContext.Provider>;\n};\n\nconst useTheme = () => useContext(ThemeContext);\n\nexport { ThemeProvider, useTheme };\n"]},"metadata":{},"sourceType":"module"}